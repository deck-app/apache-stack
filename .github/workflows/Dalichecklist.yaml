name: Apache Stack

on:
  schedule:
  - cron:  '00 21 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Apache87-AMD64:
    strategy:
      matrix:
        pv: ["8.2", "8.1", "8.0", "7.4", "7.3", "7.2"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image Apache php ${{ matrix.pv }}
        run: docker-compose -f "docker-compose.yml" up -d --build
        env:
            PHP_VERSION: ${{ matrix.pv }}
            XDEBUG: true
            DISPLAY_PHPERROR: true
            SERVER_ROOT:  /var/www/
            APP_CODE_PATH_HOST: /tmp/apache
      - name: PHP version check
        run : docker exec apache-stack_apache_1 php -v
      - name: Mongodb driver check
        run:  docker exec apache-stack_apache_1 php -m | grep mongo
      - name: Mysql Driver check
        run: docker exec apache-stack_apache_1 php -m | grep mysqli
      - name: Git Version check
        run:  docker exec apache-stack_apache_1 git --version
      - name: Curl Version check
        run:  docker exec apache-stack_apache_1 curl --version
      - name: Composer test
        run: docker exec apache-stack_apache_1 composer
      - name: Web site Test
        run: |
          docker exec apache-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
          while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5564/index.php)" != "200" ]]; 
          do 
            sleep 10s
          done
          sudo curl -I --http2 http://localhost:5564/
      - name: Destroy Container and file
        run:  |
          docker-compose down
          sudo rm -rf /tmp/apache
          echo "y" | docker image prune -a
      - name: Create ENV
        env:
          ENV_TEST: ${{ secrets.ENV_TEST }}
        run: |
          echo "$ENV_TEST" > .env.test
        shell: bash
      - name: Notify on SUCCESS
        if: ${{ SUCCESS() }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "{emoji} *{job}* has {status_message}"
          message_format: "*{workflow}* {status_message} in <{branch_url}|{branch}> Architecture <{run_url}|{job}> Approved by ${{ github.event.head_commit.author.name }}"
          footer: "Linked Repo <{repo_url}|{repo}>" 
          mention_users: "D056LFW47NF,"
          mention_users_when: "SUCCESS"
          mention_groups: "C06H0SB11JL"
          mention_groups_when: "SUCCESS"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_SUCCESS }}
      - name: Notify on FAIL
        if: ${{ failure() }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "{emoji} *{job}* has {status_message}"
          message_format: "*{workflow}* {status_message} in <{branch_url}|{branch}> Architecture <{run_url}|{job}> Approved by ${{ github.event.head_commit.author.name }}"
          footer: "Linked Repo <{repo_url}|{repo}>"
          mention_users: "D056LFW47NF"
          mention_users_when: "failure,warnings"
          mention_groups: "C06G95T1YH3"
          mention_groups_when: "failure,warnings"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_FAIL }}
  Apache87-ARM64:
    strategy:
      matrix:
        pv: ["8.2", "8.1", "8.0", "7.4", "7.3", "7.2"]
    runs-on: ubuntu-22.04
    name: Apache87-ARM64
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu22.04
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
      - name: Get the output
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
      - name: Build the Docker image Apache php ${{ matrix.pv }}
        run: docker-compose -f "docker-compose.yml" up -d --build
        env:
            PHP_VERSION: ${{ matrix.pv }}
            XDEBUG: true
            DISPLAY_PHPERROR: true
            SERVER_ROOT:  /var/www/
            APP_CODE_PATH_HOST: /tmp/apache
      - name: PHP version check
        run : docker exec apache-stack_apache_1 php -v
      - name: Mongodb driver check
        run:  docker exec apache-stack_apache_1 php -m | grep mongo
      - name: Mysql Driver check
        run: docker exec apache-stack_apache_1 php -m | grep mysqli
      - name: Git Version check
        run:  docker exec apache-stack_apache_1 git --version
      - name: Curl Version check
        run:  docker exec apache-stack_apache_1 curl --version
      - name: Composer test
        run: docker exec apache-stack_apache_1 composer
      - name: Web site Test
        run: |
          docker exec apache-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
          while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5564/index.php)" != "200" ]]; 
          do 
            sleep 10s
          done
          sudo curl -I --http2 http://localhost:5564/
      - name: Destroy Container and file
        run:  |
          docker-compose down
          sudo rm -rf /tmp/apache
          echo "y" | docker image prune -a
      - name: Create ENV
        env:
          ENV_TEST: ${{ secrets.ENV_TEST }}
        run: |
          echo "$ENV_TEST" > .env.test
        shell: bash
      - name: Notify on SUCCESS
        if: ${{ SUCCESS() }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "{emoji} *{job}* has {status_message}"
          message_format: "*{workflow}* {status_message} in <{branch_url}|{branch}> Architecture <{run_url}|{job}> Approved by ${{ github.event.head_commit.author.name }}"
          footer: "Linked Repo <{repo_url}|{repo}>" 
          mention_users: "D056LFW47NF,"
          mention_users_when: "SUCCESS"
          mention_groups: "C06H0SB11JL"
          mention_groups_when: "SUCCESS"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_SUCCESS }}
      - name: Notify on FAIL
        if: ${{ failure() }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "{emoji} *{job}* has {status_message}"
          message_format: "*{workflow}* {status_message} in <{branch_url}|{branch}> Architecture <{run_url}|{job}> Approved by ${{ github.event.head_commit.author.name }}"
          footer: "Linked Repo <{repo_url}|{repo}>"
          mention_users: "D056LFW47NF"
          mention_users_when: "failure,warnings"
          mention_groups: "C06G95T1YH3"
          mention_groups_when: "failure,warnings"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_FAIL }}
  
  Apache75-AMD64:
    strategy:
      matrix:
        pv: ["7.1", "5.6"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image Apache php ${{ matrix.pv }}
        run: docker-compose -f "docker-compose.yml" up -d --build
        env:
            PHP_VERSION: ${{ matrix.pv }}
            XDEBUG: true
            DISPLAY_PHPERROR: true
            SERVER_ROOT:  /var/www/
            APP_CODE_PATH_HOST: /tmp/apache
      - name: PHP version check
        run : docker exec apache-stack_apache_1 php -v
      - name: Mysql Driver check
        run: docker exec apache-stack_apache_1 php -m | grep mysqli
      - name: Git Version check
        run:  docker exec apache-stack_apache_1 git --version
      - name: Curl Version check
        run:  docker exec apache-stack_apache_1 curl --version
      - name: Composer test
        run: docker exec apache-stack_apache_1 composer
      - name: Web site Test
        run: |
          docker exec apache-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
          while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5564/index.php)" != "200" ]]; 
          do 
            sleep 10s
          done
          sudo curl -I --http2 http://localhost:5564/
      - name: Destroy Container and file
        run: |
            docker-compose down
            echo "y" | docker system prune -a
            echo "password" | sudo -S whoami
            sudo rm -rf /tmp/apache/
      - name: Create ENV
        env:
          ENV_TEST: ${{ secrets.ENV_TEST }}
        run: |
          echo "$ENV_TEST" > .env.test
        shell: bash
      - name: Notify on SUCCESS
        if: ${{ SUCCESS() }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "{emoji} *{job}* has {status_message}"
          message_format: "*{workflow}* {status_message} in <{branch_url}|{branch}> Architecture <{run_url}|{job}> Approved by ${{ github.event.head_commit.author.name }}"
          footer: "Linked Repo <{repo_url}|{repo}>" 
          mention_users: "D056LFW47NF,"
          mention_users_when: "SUCCESS"
          mention_groups: "C06H0SB11JL"
          mention_groups_when: "SUCCESS"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_SUCCESS }}
      - name: Notify on FAIL
        if: ${{ failure() }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "{emoji} *{job}* has {status_message}"
          message_format: "*{workflow}* {status_message} in <{branch_url}|{branch}> Architecture <{run_url}|{job}> Approved by ${{ github.event.head_commit.author.name }}"
          footer: "Linked Repo <{repo_url}|{repo}>"
          mention_users: "D056LFW47NF"
          mention_users_when: "failure,warnings"
          mention_groups: "C06G95T1YH3"
          mention_groups_when: "failure,warnings"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_FAIL }}
  Apache75-ARM64:
    strategy:
      matrix:
        pv: ["7.1", "5.6"]
    runs-on: ubuntu-22.04
    name: Apache75-ARM64
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu22.04
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
      - name: Get the output
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
      - name: Build the Docker image Apache php ${{ matrix.pv }}
        run: docker-compose -f "docker-compose.yml" up -d --build
        env:
            PHP_VERSION: ${{ matrix.pv }}
            XDEBUG: true
            DISPLAY_PHPERROR: true
            SERVER_ROOT:  /var/www/
            APP_CODE_PATH_HOST: /tmp/apache
      - name: PHP version check
        run : docker exec apache-stack_apache_1 php -v
      - name: Mysql Driver check
        run: docker exec apache-stack_apache_1 php -m | grep mysqli
      - name: Git Version check
        run:  docker exec apache-stack_apache_1 git --version
      - name: Curl Version check
        run:  docker exec apache-stack_apache_1 curl --version
      - name: Composer test
        run: docker exec apache-stack_apache_1 composer
      - name: Web site Test
        run: |
          docker exec apache-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
          while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5564/index.php)" != "200" ]]; 
          do 
            sleep 10s
          done
          sudo curl -I --http2 http://localhost:5564/
      - name: Destroy Container and file
        run: |
            docker-compose down
            echo "y" | docker system prune -a
            echo "password" | sudo -S whoami
            sudo rm -rf /tmp/apache/
      - name: Create ENV
        env:
          ENV_TEST: ${{ secrets.ENV_TEST }}
        run: |
          echo "$ENV_TEST" > .env.test
        shell: bash
      - name: Notify on SUCCESS
        if: ${{ SUCCESS() }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "{emoji} *{job}* has {status_message}"
          message_format: "*{workflow}* {status_message} in <{branch_url}|{branch}> Architecture <{run_url}|{job}> Approved by ${{ github.event.head_commit.author.name }}"
          footer: "Linked Repo <{repo_url}|{repo}>" 
          mention_users: "D056LFW47NF,"
          mention_users_when: "SUCCESS"
          mention_groups: "C06H0SB11JL"
          mention_groups_when: "SUCCESS"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_SUCCESS }}
      - name: Notify on FAIL
        if: ${{ failure() }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "{emoji} *{job}* has {status_message}"
          message_format: "*{workflow}* {status_message} in <{branch_url}|{branch}> Architecture <{run_url}|{job}> Approved by ${{ github.event.head_commit.author.name }}"
          footer: "Linked Repo <{repo_url}|{repo}>"
          mention_users: "D056LFW47NF"
          mention_users_when: "failure,warnings"
          mention_groups: "C06G95T1YH3"
          mention_groups_when: "failure,warnings"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_FAIL }}
